@model BadAPISolution.UI.Models.TweetViewModel
@using NonFactors.Mvc.Grid

<link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet">
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script>
  $(document).ready(function() {
      $(".datepicker").datepicker({
          changeMonth: true,
          changeYear: true,
          yearRange: "-3:+0"
      });
  });
</script>  

<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("GetTweets", "Tweet", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                <h4>Bad API</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(m => m.TweetRequest.StartDate, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.TweetRequest.StartDate, "{0:yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'}", new { htmlAttributes = new { @class = "form-control datepicker" } })
                        
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.TweetRequest.EndDate, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.TweetRequest.EndDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="GetTweets" class="btn btn-default" />
                    </div>
                </div>

                <div class="form-group">
                    @if (Model.Tweet != null)
                    {
                        @Html.Grid(Model.Tweet).Build(columns =>
                   {
                       //columns.Add(c => c.ClaimNumber).Titled("Claim Number").Css("mvc-grid-custom");
                       columns.Add(model => model.Id).Titled("Id").RenderedAs(model => Html.ActionLink(model.Id,
                                      "SelectedClaim", "ClaimSearch", new { claimNumber = model.Id }, null));
                       columns.Add(c => c.DateTimeStamp).Titled("Claimant Name");
                       columns.Add(c => c.Text).Titled("Customer Number").Filterable(true);
                   }).Pageable(pager =>
                   {

                       pager.CurrentPage = 1;
                       pager.RowsPerPage = 5;
                   })
                    }



                </div>
            }
        </section>
    </div>

</div>

@section Scripts {
   
    <script src="@Url.Content("~/Scripts/MvcGrid/mvc-grid.min.js")"></script>
}




